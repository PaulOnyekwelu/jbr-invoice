version: '3.9'
services:
  api:
    restart: always
    build:
      context: .
      dockerfile: ./docker/local/express/Dockerfile
    volumes:
      - /app/node_modules
      - .:/app
    env_file:
      - ./.env
    ports:
      - 8000:8000
    depends_on:
      - mongodb
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb
      FORCE_COLOR: 1
    networks:
      - invoice-net

  mongodb:
    image: mongo:5.0.23-focal
    restart: always
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - 27017:27017
    networks:
      - invoice-net

  mongo-express:
    image: mongo-express:1.0.0-20-alpine3.18
    restart: always
    depends_on: 
      - mongodb
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin12345

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - invoice-net

networks:
  invoice-net:
    driver: bridge

volumes:
  mongodb-data:
